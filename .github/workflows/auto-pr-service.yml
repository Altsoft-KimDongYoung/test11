name: Create PR in B repo from A repo

on:
  push:
    branches:
      - test/gitAction

jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
      # 1. B 레포를 클론 (A 레포의 워크플로우에서 다른 레포를 클론하려면 repository 옵션 사용)
      - name: Checkout B repository
        uses: actions/checkout@v3
        with:
          repository: altsoft5472344/ondaji_4gen_front_service
          token: ${{ secrets.ACCESS_TOKEN }} # B 레포 접근을 위한 PAT (Personal Access Token)
          path: b-repo

      # 2. B 레포 디렉터리로 이동하여 Git 설정
      - name: Configure Git in B repo
        working-directory: b-repo
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # 3. B 레포에서 새로운 브랜치 생성 및 변경사항 커밋 (여기서는 예시로 README.md에 간단한 내용을 추가)
      - name: Create new branch in B repo
        working-directory: b-repo
        run: |
          # 고유한 브랜치 이름 생성 (예: test8-타임스탬프)
          BRANCH="test8-$(date +%s)"
          echo "Creating branch $BRANCH"
          git checkout -b $BRANCH
          # 예시 변경사항: README.md 파일에 내용 추가 (실제 변경 사항을 적용하세요)
          echo "자동 PR 테스트" >> README.md
          git add README.md
          git commit -m "Update README in branch $BRANCH"

      # 4. 새 브랜치를 원격(B 레포)에 push
      - name: Push new branch to B repo
        working-directory: b-repo
        run: |
          git push origin $BRANCH

      # 5. GitHub CLI를 사용해 B 레포에 PR 생성 (HEAD: 새 브랜치, BASE: main)
      - name: Create PR in B repo using GitHub CLI
        working-directory: b-repo
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          gh pr create --title "Update from A repo" \
                       --body "자동 생성된 PR입니다. A 레포에서 변경 사항을 반영했습니다." \
                       --base main --head $BRANCH
